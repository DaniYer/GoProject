// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: select_by_user.sql

package queries

import (
	"context"
	"database/sql"
)

const getAllByUserID = `-- name: GetAllByUserID :many
SELECT short_url, original_url FROM urls 
WHERE user_id = $1 AND is_deleted = false
`

type GetAllByUserIDRow struct {
	ShortUrl    string
	OriginalUrl string
}

func (q *Queries) GetAllByUserID(ctx context.Context, userID sql.NullString) ([]GetAllByUserIDRow, error) {
	rows, err := q.db.QueryContext(ctx, getAllByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllByUserIDRow
	for rows.Next() {
		var i GetAllByUserIDRow
		if err := rows.Scan(&i.ShortUrl, &i.OriginalUrl); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
